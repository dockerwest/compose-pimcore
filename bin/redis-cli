#!/usr/bin/env python3

import os
import sys
import subprocess
import re
from environment import Environment

currentpath = os.getcwd()
composepath = os.path.abspath(os.path.dirname(sys.argv[0]) + '/../')

env = Environment(composepath + '/.env')

cmd = [
    os.path.dirname(sys.argv[0]) + '/run',
    'ps', '--services', '--filter', 'status=running'
]

p = subprocess.Popen(cmd, stdout=subprocess.PIPE)
try:
    p.wait()
except KeyboardInterrupt:
    try:
        p.terminate()
    except OSError:
        pass
    p.wait()
out, err = p.communicate()
out = out.decode('utf-8')
runningContainers = out.splitlines()

if not 'redis' in runningContainers:
    raise Exception('We need a running redis server')

dockerrun = [os.path.dirname(sys.argv[0]) + '/run', 'exec']
if not sys.stdin.isatty() or not sys.stdout.isatty():
    dockerrun += ['-T']

cmd = dockerrun + [
    'redis', 'redis-cli'
] + sys.argv[1:]

os.execvp(cmd[0], cmd)
